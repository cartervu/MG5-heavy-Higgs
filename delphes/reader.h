   // Declaration of leaf types
   Int_t           EventNumber;
   Float_t         mc_event_weight;
   Int_t           ph_n;
   Float_t         ph_pt[2];   //[ph_n]
   Float_t         ph_eta[2];   //[ph_n]
   Float_t         ph_phi[2];   //[ph_n]
   Int_t           mu_n;
   Float_t         mu_E[2];   //[mu_n]
   Float_t         mu_pt[2];   //[mu_n]
   Float_t         mu_eta[2];   //[mu_n]
   Float_t         mu_phi[2];   //[mu_n]
   Float_t         mu_E_cor[2];   //[mu_n]
   Float_t         mu_pt_cor[2];   //[mu_n]
   Float_t         mu_eta_cor[2];   //[mu_n]
   Float_t         mu_phi_cor[2];   //[mu_n]
   Int_t           mu_charge[2];   //[mu_n]
   Float_t         mu_x[2];   //[mu_n]
   Float_t         mu_y[2];   //[mu_n]
   Float_t         mu_z[2];   //[mu_n]
   Float_t         mu_xd[2];   //[mu_n]
   Float_t         mu_yd[2];   //[mu_n]
   Float_t         mu_zd[2];   //[mu_n]
   Float_t         mu_truth_dr[2];   //[mu_n]
   Float_t         mu_truth_E_cor[2];   //[mu_n]
   Float_t         mu_truth_pt_cor[2];   //[mu_n]
   Float_t         mu_truth_eta_cor[2];   //[mu_n]
   Float_t         mu_truth_phi_cor[2];   //[mu_n]
   Float_t         mu_truth_E[2];   //[mu_n]
   Float_t         mu_truth_pt[2];   //[mu_n]
   Float_t         mu_truth_eta[2];   //[mu_n]
   Float_t         mu_truth_phi[2];   //[mu_n]
   Int_t           mu_truth_pdgIdMoth[2];   //[mu_n]
   Int_t           el_n;
   Float_t         el_E[4];   //[el_n]
   Float_t         el_pt[4];   //[el_n]
   Float_t         el_eta[4];   //[el_n]
   Float_t         el_phi[4];   //[el_n]
   Float_t         el_E_cor[4];   //[el_n]
   Float_t         el_pt_cor[4];   //[el_n]
   Float_t         el_eta_cor[4];   //[el_n]
   Float_t         el_phi_cor[4];   //[el_n]
   Int_t           el_charge[4];   //[el_n]
   Float_t         el_x[4];   //[el_n]
   Float_t         el_y[4];   //[el_n]
   Float_t         el_z[4];   //[el_n]
   Float_t         el_xd[4];   //[el_n]
   Float_t         el_yd[4];   //[el_n]
   Float_t         el_zd[4];   //[el_n]
   Float_t         el_truth_dr[4];   //[el_n]
   Float_t         el_truth_E_cor[4];   //[el_n]
   Float_t         el_truth_pt_cor[4];   //[el_n]
   Float_t         el_truth_eta_cor[4];   //[el_n]
   Float_t         el_truth_phi_cor[4];   //[el_n]
   Float_t         el_truth_E[4];   //[el_n]
   Float_t         el_truth_pt[4];   //[el_n]
   Float_t         el_truth_eta[4];   //[el_n]
   Float_t         el_truth_phi[4];   //[el_n]
   Int_t           el_truth_pdgIdMoth[4];   //[el_n]
   Int_t           tau_n;
   Float_t         tau_E[3];   //[tau_n]
   Float_t         tau_pt[3];   //[tau_n]
   Float_t         tau_eta[3];   //[tau_n]
   Float_t         tau_phi[3];   //[tau_n]
   Int_t           tau_charge[3];   //[tau_n]
   Int_t           tau_numTrack[3];   //[tau_n]
   Int_t           tau_numNeut[3];   //[tau_n]
   Float_t         tau_trk1_pt[3];   //[tau_n]
   Float_t         tau_trk1_eta[3];   //[tau_n]
   Float_t         tau_trk1_phi[3];   //[tau_n]
   Float_t         tau_trk1_m[3];   //[tau_n]
   Float_t         tau_trk1_x[3];   //[tau_n]
   Float_t         tau_trk1_y[3];   //[tau_n]
   Float_t         tau_trk1_z[3];   //[tau_n]
   Float_t         tau_trk1_xd[3];   //[tau_n]
   Float_t         tau_trk1_yd[3];   //[tau_n]
   Float_t         tau_trk1_zd[3];   //[tau_n]
   Int_t           tau_trk1_charge[3];   //[tau_n]
   Int_t           tau_trk1_pdgId[3];   //[tau_n]
   Float_t         tau_trk2_pt[3];   //[tau_n]
   Float_t         tau_trk2_eta[3];   //[tau_n]
   Float_t         tau_trk2_phi[3];   //[tau_n]
   Float_t         tau_trk2_m[3];   //[tau_n]
   Float_t         tau_trk2_x[3];   //[tau_n]
   Float_t         tau_trk2_y[3];   //[tau_n]
   Float_t         tau_trk2_z[3];   //[tau_n]
   Float_t         tau_trk2_xd[3];   //[tau_n]
   Float_t         tau_trk2_yd[3];   //[tau_n]
   Float_t         tau_trk2_zd[3];   //[tau_n]
   Int_t           tau_trk2_charge[3];   //[tau_n]
   Int_t           tau_trk2_pdgId[3];   //[tau_n]
   Float_t         tau_trk3_pt[3];   //[tau_n]
   Float_t         tau_trk3_eta[3];   //[tau_n]
   Float_t         tau_trk3_phi[3];   //[tau_n]
   Float_t         tau_trk3_m[3];   //[tau_n]
   Float_t         tau_trk3_x[3];   //[tau_n]
   Float_t         tau_trk3_y[3];   //[tau_n]
   Float_t         tau_trk3_z[3];   //[tau_n]
   Float_t         tau_trk3_xd[3];   //[tau_n]
   Float_t         tau_trk3_yd[3];   //[tau_n]
   Float_t         tau_trk3_zd[3];   //[tau_n]
   Int_t           tau_trk3_charge[3];   //[tau_n]
   Int_t           tau_trk3_pdgId[3];   //[tau_n]
   Int_t           jet_n;
   Float_t         jet_E[7];   //[jet_n]
   Float_t         jet_m[7];   //[jet_n]
   Float_t         jet_pt[7];   //[jet_n]
   Float_t         jet_eta[7];   //[jet_n]
   Float_t         jet_phi[7];   //[jet_n]
   Bool_t          jet_isTau[7];   //[jet_n]
   Bool_t          jet_isBtagged[7];   //[jet_n]
   Float_t         MET_ex;
   Float_t         MET_ey;
   Float_t         MET_ez;
   Float_t         MET_et;
   Float_t         MET_phi;
   Float_t         MET_sumet;
   Float_t         MET_Truth_NonInt_ex;
   Float_t         MET_Truth_NonInt_ey;
   Float_t         MET_Truth_NonInt_ez;
   Float_t         MET_Truth_NonInt_et;
   Int_t           mc_n;
   Float_t         mc_pt[6];   //[mc_n]
   Float_t         mc_m[6];   //[mc_n]
   Float_t         mc_eta[6];   //[mc_n]
   Float_t         mc_phi[6];   //[mc_n]
   Int_t           mc_status[6];   //[mc_n]
   Int_t           mc_pdgId[6];   //[mc_n]
   Int_t           mc_pdgIdMoth[6];   //[mc_n]
   Int_t           mc_charge[6];   //[mc_n]
   Int_t           jet_truth_n;
   Float_t         jet_truth_pt[11];   //[jet_truth_n]
   Float_t         jet_truth_eta[11];   //[jet_truth_n]
   Float_t         jet_truth_phi[11];   //[jet_truth_n]
   Float_t         jet_truth_m[11];   //[jet_truth_n]
   Int_t           truthTau_n;
   Int_t           truthTau_vis_pdgId[4];   //[truthTau_n]
   Int_t           truthTau_vis_pdgIdMoth[4];   //[truthTau_n]
   Float_t         truthTau_vis_pt[4];   //[truthTau_n]
   Float_t         truthTau_vis_m[4];   //[truthTau_n]
   Float_t         truthTau_vis_eta[4];   //[truthTau_n]
   Float_t         truthTau_vis_phi[4];   //[truthTau_n]
   Int_t           truthTau_vis_charge[4];   //[truthTau_n]
   Int_t           truthTau_vis_numTrack[4];   //[truthTau_n]
   Int_t           truthTau_vis_numNeut[4];   //[truthTau_n]
   Int_t           truthTau_vis_numPi0[4];   //[truthTau_n]
   Int_t           truthTau_vis_numGam[4];   //[truthTau_n]
   Float_t         truthTau_nu3_pt[4];   //[truthTau_n]
   Float_t         truthTau_nu3_m[4];   //[truthTau_n]
   Float_t         truthTau_nu3_eta[4];   //[truthTau_n]
   Float_t         truthTau_nu3_phi[4];   //[truthTau_n]
   Float_t         truthTau_inv_pt[4];   //[truthTau_n]
   Float_t         truthTau_inv_m[4];   //[truthTau_n]
   Float_t         truthTau_inv_eta[4];   //[truthTau_n]
   Float_t         truthTau_inv_phi[4];   //[truthTau_n]
   Float_t         truthTau_trk1_pt[4];   //[truthTau_n]
   Float_t         truthTau_trk1_eta[4];   //[truthTau_n]
   Float_t         truthTau_trk1_phi[4];   //[truthTau_n]
   Float_t         truthTau_trk1_m[4];   //[truthTau_n]
   Float_t         truthTau_trk1_x[4];   //[truthTau_n]
   Float_t         truthTau_trk1_y[4];   //[truthTau_n]
   Float_t         truthTau_trk1_z[4];   //[truthTau_n]
   Float_t         truthTau_trk1_xd[4];   //[truthTau_n]
   Float_t         truthTau_trk1_yd[4];   //[truthTau_n]
   Float_t         truthTau_trk1_zd[4];   //[truthTau_n]
   Int_t           truthTau_trk1_charge[4];   //[truthTau_n]
   Int_t           truthTau_trk1_pdgId[4];   //[truthTau_n]
   Float_t         truthTau_trk2_pt[4];   //[truthTau_n]
   Float_t         truthTau_trk2_eta[4];   //[truthTau_n]
   Float_t         truthTau_trk2_phi[4];   //[truthTau_n]
   Float_t         truthTau_trk2_m[4];   //[truthTau_n]
   Float_t         truthTau_trk2_x[4];   //[truthTau_n]
   Float_t         truthTau_trk2_y[4];   //[truthTau_n]
   Float_t         truthTau_trk2_z[4];   //[truthTau_n]
   Float_t         truthTau_trk2_xd[4];   //[truthTau_n]
   Float_t         truthTau_trk2_yd[4];   //[truthTau_n]
   Float_t         truthTau_trk2_zd[4];   //[truthTau_n]
   Int_t           truthTau_trk2_charge[4];   //[truthTau_n]
   Int_t           truthTau_trk2_pdgId[4];   //[truthTau_n]
   Float_t         truthTau_trk3_pt[4];   //[truthTau_n]
   Float_t         truthTau_trk3_eta[4];   //[truthTau_n]
   Float_t         truthTau_trk3_phi[4];   //[truthTau_n]
   Float_t         truthTau_trk3_m[4];   //[truthTau_n]
   Float_t         truthTau_trk3_x[4];   //[truthTau_n]
   Float_t         truthTau_trk3_y[4];   //[truthTau_n]
   Float_t         truthTau_trk3_z[4];   //[truthTau_n]
   Float_t         truthTau_trk3_xd[4];   //[truthTau_n]
   Float_t         truthTau_trk3_yd[4];   //[truthTau_n]
   Float_t         truthTau_trk3_zd[4];   //[truthTau_n]
   Int_t           truthTau_trk3_charge[4];   //[truthTau_n]
   Int_t           truthTau_trk3_pdgId[4];   //[truthTau_n]
   Float_t         truthTau_neut1_e[4];   //[truthTau_n]
   Float_t         truthTau_neut1_pt[4];   //[truthTau_n]
   Float_t         truthTau_neut1_eta[4];   //[truthTau_n]
   Float_t         truthTau_neut1_phi[4];   //[truthTau_n]
   Int_t           truthTau_neut1_pdgId[4];   //[truthTau_n]
   Float_t         truthTau_neut2_e[4];   //[truthTau_n]
   Float_t         truthTau_neut2_pt[4];   //[truthTau_n]
   Float_t         truthTau_neut2_eta[4];   //[truthTau_n]
   Float_t         truthTau_neut2_phi[4];   //[truthTau_n]
   Int_t           truthTau_neut2_pdgId[4];   //[truthTau_n]
   Float_t         truthTau_neut3_e[4];   //[truthTau_n]
   Float_t         truthTau_neut3_pt[4];   //[truthTau_n]
   Float_t         truthTau_neut3_eta[4];   //[truthTau_n]
   Float_t         truthTau_neut3_phi[4];   //[truthTau_n]
   Int_t           truthTau_neut3_pdgId[4];   //[truthTau_n]

   // List of branches
   TBranch        *b_EventNumber;   //!
   TBranch        *b_mc_event_weight;   //!
   TBranch        *b_ph_n;   //!
   TBranch        *b_ph_pt;   //!
   TBranch        *b_ph_eta;   //!
   TBranch        *b_ph_phi;   //!
   TBranch        *b_mu_n;   //!
   TBranch        *b_mu_E;   //!
   TBranch        *b_mu_pt;   //!
   TBranch        *b_mu_eta;   //!
   TBranch        *b_mu_phi;   //!
   TBranch        *b_mu_E_cor;   //!
   TBranch        *b_mu_pt_cor;   //!
   TBranch        *b_mu_eta_cor;   //!
   TBranch        *b_mu_phi_cor;   //!
   TBranch        *b_mu_charge;   //!
   TBranch        *b_mu_x;   //!
   TBranch        *b_mu_y;   //!
   TBranch        *b_mu_z;   //!
   TBranch        *b_mu_xd;   //!
   TBranch        *b_mu_yd;   //!
   TBranch        *b_mu_zd;   //!
   TBranch        *b_mu_truth_dr;   //!
   TBranch        *b_mu_truth_E_cor;   //!
   TBranch        *b_mu_truth_pt_cor;   //!
   TBranch        *b_mu_truth_eta_cor;   //!
   TBranch        *b_mu_truth_phi_cor;   //!
   TBranch        *b_mu_truth_E;   //!
   TBranch        *b_mu_truth_pt;   //!
   TBranch        *b_mu_truth_eta;   //!
   TBranch        *b_mu_truth_phi;   //!
   TBranch        *b_mu_truth_pdgIdMoth;   //!
   TBranch        *b_el_n;   //!
   TBranch        *b_el_E;   //!
   TBranch        *b_el_pt;   //!
   TBranch        *b_el_eta;   //!
   TBranch        *b_el_phi;   //!
   TBranch        *b_el_E_cor;   //!
   TBranch        *b_el_pt_cor;   //!
   TBranch        *b_el_eta_cor;   //!
   TBranch        *b_el_phi_cor;   //!
   TBranch        *b_el_charge;   //!
   TBranch        *b_el_x;   //!
   TBranch        *b_el_y;   //!
   TBranch        *b_el_z;   //!
   TBranch        *b_el_xd;   //!
   TBranch        *b_el_yd;   //!
   TBranch        *b_el_zd;   //!
   TBranch        *b_el_truth_dr;   //!
   TBranch        *b_el_truth_E_cor;   //!
   TBranch        *b_el_truth_pt_cor;   //!
   TBranch        *b_el_truth_eta_cor;   //!
   TBranch        *b_el_truth_phi_cor;   //!
   TBranch        *b_el_truth_E;   //!
   TBranch        *b_el_truth_pt;   //!
   TBranch        *b_el_truth_eta;   //!
   TBranch        *b_el_truth_phi;   //!
   TBranch        *b_el_truth_pdgIdMoth;   //!
   TBranch        *b_tau_n;   //!
   TBranch        *b_tau_E;   //!
   TBranch        *b_tau_pt;   //!
   TBranch        *b_tau_eta;   //!
   TBranch        *b_tau_phi;   //!
   TBranch        *b_tau_charge;   //!
   TBranch        *b_tau_numTrack;   //!
   TBranch        *b_tau_numNeut;   //!
   TBranch        *b_tau_trk1_pt;   //!
   TBranch        *b_tau_trk1_eta;   //!
   TBranch        *b_tau_trk1_phi;   //!
   TBranch        *b_tau_trk1_m;   //!
   TBranch        *b_tau_trk1_x;   //!
   TBranch        *b_tau_trk1_y;   //!
   TBranch        *b_tau_trk1_z;   //!
   TBranch        *b_tau_trk1_xd;   //!
   TBranch        *b_tau_trk1_yd;   //!
   TBranch        *b_tau_trk1_zd;   //!
   TBranch        *b_tau_trk1_charge;   //!
   TBranch        *b_tau_trk1_pdgId;   //!
   TBranch        *b_tau_trk2_pt;   //!
   TBranch        *b_tau_trk2_eta;   //!
   TBranch        *b_tau_trk2_phi;   //!
   TBranch        *b_tau_trk2_m;   //!
   TBranch        *b_tau_trk2_x;   //!
   TBranch        *b_tau_trk2_y;   //!
   TBranch        *b_tau_trk2_z;   //!
   TBranch        *b_tau_trk2_xd;   //!
   TBranch        *b_tau_trk2_yd;   //!
   TBranch        *b_tau_trk2_zd;   //!
   TBranch        *b_tau_trk2_charge;   //!
   TBranch        *b_tau_trk2_pdgId;   //!
   TBranch        *b_tau_trk3_pt;   //!
   TBranch        *b_tau_trk3_eta;   //!
   TBranch        *b_tau_trk3_phi;   //!
   TBranch        *b_tau_trk3_m;   //!
   TBranch        *b_tau_trk3_x;   //!
   TBranch        *b_tau_trk3_y;   //!
   TBranch        *b_tau_trk3_z;   //!
   TBranch        *b_tau_trk3_xd;   //!
   TBranch        *b_tau_trk3_yd;   //!
   TBranch        *b_tau_trk3_zd;   //!
   TBranch        *b_tau_trk3_charge;   //!
   TBranch        *b_tau_trk3_pdgId;   //!
   TBranch        *b_jet_n;   //!
   TBranch        *b_jet_E;   //!
   TBranch        *b_jet_m;   //!
   TBranch        *b_jet_pt;   //!
   TBranch        *b_jet_eta;   //!
   TBranch        *b_jet_phi;   //!
   TBranch        *b_jet_isTau;   //!
   TBranch        *b_jet_isBtagged;   //!
   TBranch        *b_MET_ex;   //!
   TBranch        *b_MET_ey;   //!
   TBranch        *b_MET_ez;   //!
   TBranch        *b_MET_et;   //!
   TBranch        *b_MET_phi;   //!
   TBranch        *b_MET_sumet;   //!
   TBranch        *b_MET_Truth_NonInt_ex;   //!
   TBranch        *b_MET_Truth_NonInt_ey;   //!
   TBranch        *b_MET_Truth_NonInt_ez;   //!
   TBranch        *b_MET_Truth_NonInt_et;   //!
   TBranch        *b_mc_n;   //!
   TBranch        *b_mc_pt;   //!
   TBranch        *b_mc_m;   //!
   TBranch        *b_mc_eta;   //!
   TBranch        *b_mc_phi;   //!
   TBranch        *b_mc_status;   //!
   TBranch        *b_mc_pdgId;   //!
   TBranch        *b_mc_pdgIdMoth;   //!
   TBranch        *b_mc_charge;   //!
   TBranch        *b_jet_truth_n;   //!
   TBranch        *b_jet_truth_pt;   //!
   TBranch        *b_jet_truth_eta;   //!
   TBranch        *b_jet_truth_phi;   //!
   TBranch        *b_jet_truth_m;   //!
   TBranch        *b_truthTau_n;   //!
   TBranch        *b_truthTau_vis_pdgId;   //!
   TBranch        *b_truthTau_vis_pdgIdMoth;   //!
   TBranch        *b_truthTau_vis_pt;   //!
   TBranch        *b_truthTau_vis_m;   //!
   TBranch        *b_truthTau_vis_eta;   //!
   TBranch        *b_truthTau_vis_phi;   //!
   TBranch        *b_truthTau_vis_charge;   //!
   TBranch        *b_truthTau_vis_numTrack;   //!
   TBranch        *b_truthTau_vis_numNeut;   //!
   TBranch        *b_truthTau_vis_numPi0;   //!
   TBranch        *b_truthTau_vis_numGam;   //!
   TBranch        *b_truthTau_nu3_pt;   //!
   TBranch        *b_truthTau_nu3_m;   //!
   TBranch        *b_truthTau_nu3_eta;   //!
   TBranch        *b_truthTau_nu3_phi;   //!
   TBranch        *b_truthTau_inv_pt;   //!
   TBranch        *b_truthTau_inv_m;   //!
   TBranch        *b_truthTau_inv_eta;   //!
   TBranch        *b_truthTau_inv_phi;   //!
   TBranch        *b_truthTau_trk1_pt;   //!
   TBranch        *b_truthTau_trk1_eta;   //!
   TBranch        *b_truthTau_trk1_phi;   //!
   TBranch        *b_truthTau_trk1_m;   //!
   TBranch        *b_truthTau_trk1_x;   //!
   TBranch        *b_truthTau_trk1_y;   //!
   TBranch        *b_truthTau_trk1_z;   //!
   TBranch        *b_truthTau_trk1_xd;   //!
   TBranch        *b_truthTau_trk1_yd;   //!
   TBranch        *b_truthTau_trk1_zd;   //!
   TBranch        *b_truthTau_trk1_charge;   //!
   TBranch        *b_truthTau_trk1_pdgId;   //!
   TBranch        *b_truthTau_trk2_pt;   //!
   TBranch        *b_truthTau_trk2_eta;   //!
   TBranch        *b_truthTau_trk2_phi;   //!
   TBranch        *b_truthTau_trk2_m;   //!
   TBranch        *b_truthTau_trk2_x;   //!
   TBranch        *b_truthTau_trk2_y;   //!
   TBranch        *b_truthTau_trk2_z;   //!
   TBranch        *b_truthTau_trk2_xd;   //!
   TBranch        *b_truthTau_trk2_yd;   //!
   TBranch        *b_truthTau_trk2_zd;   //!
   TBranch        *b_truthTau_trk2_charge;   //!
   TBranch        *b_truthTau_trk2_pdgId;   //!
   TBranch        *b_truthTau_trk3_pt;   //!
   TBranch        *b_truthTau_trk3_eta;   //!
   TBranch        *b_truthTau_trk3_phi;   //!
   TBranch        *b_truthTau_trk3_m;   //!
   TBranch        *b_truthTau_trk3_x;   //!
   TBranch        *b_truthTau_trk3_y;   //!
   TBranch        *b_truthTau_trk3_z;   //!
   TBranch        *b_truthTau_trk3_xd;   //!
   TBranch        *b_truthTau_trk3_yd;   //!
   TBranch        *b_truthTau_trk3_zd;   //!
   TBranch        *b_truthTau_trk3_charge;   //!
   TBranch        *b_truthTau_trk3_pdgId;   //!
   TBranch        *b_truthTau_neut1_e;   //!
   TBranch        *b_truthTau_neut1_pt;   //!
   TBranch        *b_truthTau_neut1_eta;   //!
   TBranch        *b_truthTau_neut1_phi;   //!
   TBranch        *b_truthTau_neut1_pdgId;   //!
   TBranch        *b_truthTau_neut2_e;   //!
   TBranch        *b_truthTau_neut2_pt;   //!
   TBranch        *b_truthTau_neut2_eta;   //!
   TBranch        *b_truthTau_neut2_phi;   //!
   TBranch        *b_truthTau_neut2_pdgId;   //!
   TBranch        *b_truthTau_neut3_e;   //!
   TBranch        *b_truthTau_neut3_pt;   //!
   TBranch        *b_truthTau_neut3_eta;   //!
   TBranch        *b_truthTau_neut3_phi;   //!
   TBranch        *b_truthTau_neut3_pdgId;   //!

void Init(TTree *tree)
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set branch addresses and branch pointers
   if (!tree) return;
   TTree* fChain = tree;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("EventNumber", &EventNumber, &b_EventNumber);
   fChain->SetBranchAddress("mc_event_weight", &mc_event_weight, &b_mc_event_weight);
   fChain->SetBranchAddress("ph_n", &ph_n, &b_ph_n);
   fChain->SetBranchAddress("ph_pt", ph_pt, &b_ph_pt);
   fChain->SetBranchAddress("ph_eta", ph_eta, &b_ph_eta);
   fChain->SetBranchAddress("ph_phi", ph_phi, &b_ph_phi);
   fChain->SetBranchAddress("mu_n", &mu_n, &b_mu_n);
   fChain->SetBranchAddress("mu_E", mu_E, &b_mu_E);
   fChain->SetBranchAddress("mu_pt", mu_pt, &b_mu_pt);
   fChain->SetBranchAddress("mu_eta", mu_eta, &b_mu_eta);
   fChain->SetBranchAddress("mu_phi", mu_phi, &b_mu_phi);
   fChain->SetBranchAddress("mu_E_cor", mu_E_cor, &b_mu_E_cor);
   fChain->SetBranchAddress("mu_pt_cor", mu_pt_cor, &b_mu_pt_cor);
   fChain->SetBranchAddress("mu_eta_cor", mu_eta_cor, &b_mu_eta_cor);
   fChain->SetBranchAddress("mu_phi_cor", mu_phi_cor, &b_mu_phi_cor);
   fChain->SetBranchAddress("mu_charge", mu_charge, &b_mu_charge);
   fChain->SetBranchAddress("mu_x", mu_x, &b_mu_x);
   fChain->SetBranchAddress("mu_y", mu_y, &b_mu_y);
   fChain->SetBranchAddress("mu_z", mu_z, &b_mu_z);
   fChain->SetBranchAddress("mu_xd", mu_xd, &b_mu_xd);
   fChain->SetBranchAddress("mu_yd", mu_yd, &b_mu_yd);
   fChain->SetBranchAddress("mu_zd", mu_zd, &b_mu_zd);
   fChain->SetBranchAddress("mu_truth_dr", mu_truth_dr, &b_mu_truth_dr);
   fChain->SetBranchAddress("mu_truth_E_cor", mu_truth_E_cor, &b_mu_truth_E_cor);
   fChain->SetBranchAddress("mu_truth_pt_cor", mu_truth_pt_cor, &b_mu_truth_pt_cor);
   fChain->SetBranchAddress("mu_truth_eta_cor", mu_truth_eta_cor, &b_mu_truth_eta_cor);
   fChain->SetBranchAddress("mu_truth_phi_cor", mu_truth_phi_cor, &b_mu_truth_phi_cor);
   fChain->SetBranchAddress("mu_truth_E", mu_truth_E, &b_mu_truth_E);
   fChain->SetBranchAddress("mu_truth_pt", mu_truth_pt, &b_mu_truth_pt);
   fChain->SetBranchAddress("mu_truth_eta", mu_truth_eta, &b_mu_truth_eta);
   fChain->SetBranchAddress("mu_truth_phi", mu_truth_phi, &b_mu_truth_phi);
   fChain->SetBranchAddress("mu_truth_pdgIdMoth", mu_truth_pdgIdMoth, &b_mu_truth_pdgIdMoth);
   fChain->SetBranchAddress("el_n", &el_n, &b_el_n);
   fChain->SetBranchAddress("el_E", el_E, &b_el_E);
   fChain->SetBranchAddress("el_pt", el_pt, &b_el_pt);
   fChain->SetBranchAddress("el_eta", el_eta, &b_el_eta);
   fChain->SetBranchAddress("el_phi", el_phi, &b_el_phi);
   fChain->SetBranchAddress("el_E_cor", el_E_cor, &b_el_E_cor);
   fChain->SetBranchAddress("el_pt_cor", el_pt_cor, &b_el_pt_cor);
   fChain->SetBranchAddress("el_eta_cor", el_eta_cor, &b_el_eta_cor);
   fChain->SetBranchAddress("el_phi_cor", el_phi_cor, &b_el_phi_cor);
   fChain->SetBranchAddress("el_charge", el_charge, &b_el_charge);
   fChain->SetBranchAddress("el_x", el_x, &b_el_x);
   fChain->SetBranchAddress("el_y", el_y, &b_el_y);
   fChain->SetBranchAddress("el_z", el_z, &b_el_z);
   fChain->SetBranchAddress("el_xd", el_xd, &b_el_xd);
   fChain->SetBranchAddress("el_yd", el_yd, &b_el_yd);
   fChain->SetBranchAddress("el_zd", el_zd, &b_el_zd);
   fChain->SetBranchAddress("el_truth_dr", el_truth_dr, &b_el_truth_dr);
   fChain->SetBranchAddress("el_truth_E_cor", el_truth_E_cor, &b_el_truth_E_cor);
   fChain->SetBranchAddress("el_truth_pt_cor", el_truth_pt_cor, &b_el_truth_pt_cor);
   fChain->SetBranchAddress("el_truth_eta_cor", el_truth_eta_cor, &b_el_truth_eta_cor);
   fChain->SetBranchAddress("el_truth_phi_cor", el_truth_phi_cor, &b_el_truth_phi_cor);
   fChain->SetBranchAddress("el_truth_E", el_truth_E, &b_el_truth_E);
   fChain->SetBranchAddress("el_truth_pt", el_truth_pt, &b_el_truth_pt);
   fChain->SetBranchAddress("el_truth_eta", el_truth_eta, &b_el_truth_eta);
   fChain->SetBranchAddress("el_truth_phi", el_truth_phi, &b_el_truth_phi);
   fChain->SetBranchAddress("el_truth_pdgIdMoth", el_truth_pdgIdMoth, &b_el_truth_pdgIdMoth);
   fChain->SetBranchAddress("tau_n", &tau_n, &b_tau_n);
   fChain->SetBranchAddress("tau_E", tau_E, &b_tau_E);
   fChain->SetBranchAddress("tau_pt", tau_pt, &b_tau_pt);
   fChain->SetBranchAddress("tau_eta", tau_eta, &b_tau_eta);
   fChain->SetBranchAddress("tau_phi", tau_phi, &b_tau_phi);
   fChain->SetBranchAddress("tau_charge", tau_charge, &b_tau_charge);
   fChain->SetBranchAddress("tau_numTrack", tau_numTrack, &b_tau_numTrack);
   fChain->SetBranchAddress("tau_numNeut", tau_numNeut, &b_tau_numNeut);
   fChain->SetBranchAddress("tau_trk1_pt", tau_trk1_pt, &b_tau_trk1_pt);
   fChain->SetBranchAddress("tau_trk1_eta", tau_trk1_eta, &b_tau_trk1_eta);
   fChain->SetBranchAddress("tau_trk1_phi", tau_trk1_phi, &b_tau_trk1_phi);
   fChain->SetBranchAddress("tau_trk1_m", tau_trk1_m, &b_tau_trk1_m);
   fChain->SetBranchAddress("tau_trk1_x", tau_trk1_x, &b_tau_trk1_x);
   fChain->SetBranchAddress("tau_trk1_y", tau_trk1_y, &b_tau_trk1_y);
   fChain->SetBranchAddress("tau_trk1_z", tau_trk1_z, &b_tau_trk1_z);
   fChain->SetBranchAddress("tau_trk1_xd", tau_trk1_xd, &b_tau_trk1_xd);
   fChain->SetBranchAddress("tau_trk1_yd", tau_trk1_yd, &b_tau_trk1_yd);
   fChain->SetBranchAddress("tau_trk1_zd", tau_trk1_zd, &b_tau_trk1_zd);
   fChain->SetBranchAddress("tau_trk1_charge", tau_trk1_charge, &b_tau_trk1_charge);
   fChain->SetBranchAddress("tau_trk1_pdgId", tau_trk1_pdgId, &b_tau_trk1_pdgId);
   fChain->SetBranchAddress("tau_trk2_pt", tau_trk2_pt, &b_tau_trk2_pt);
   fChain->SetBranchAddress("tau_trk2_eta", tau_trk2_eta, &b_tau_trk2_eta);
   fChain->SetBranchAddress("tau_trk2_phi", tau_trk2_phi, &b_tau_trk2_phi);
   fChain->SetBranchAddress("tau_trk2_m", tau_trk2_m, &b_tau_trk2_m);
   fChain->SetBranchAddress("tau_trk2_x", tau_trk2_x, &b_tau_trk2_x);
   fChain->SetBranchAddress("tau_trk2_y", tau_trk2_y, &b_tau_trk2_y);
   fChain->SetBranchAddress("tau_trk2_z", tau_trk2_z, &b_tau_trk2_z);
   fChain->SetBranchAddress("tau_trk2_xd", tau_trk2_xd, &b_tau_trk2_xd);
   fChain->SetBranchAddress("tau_trk2_yd", tau_trk2_yd, &b_tau_trk2_yd);
   fChain->SetBranchAddress("tau_trk2_zd", tau_trk2_zd, &b_tau_trk2_zd);
   fChain->SetBranchAddress("tau_trk2_charge", tau_trk2_charge, &b_tau_trk2_charge);
   fChain->SetBranchAddress("tau_trk2_pdgId", tau_trk2_pdgId, &b_tau_trk2_pdgId);
   fChain->SetBranchAddress("tau_trk3_pt", tau_trk3_pt, &b_tau_trk3_pt);
   fChain->SetBranchAddress("tau_trk3_eta", tau_trk3_eta, &b_tau_trk3_eta);
   fChain->SetBranchAddress("tau_trk3_phi", tau_trk3_phi, &b_tau_trk3_phi);
   fChain->SetBranchAddress("tau_trk3_m", tau_trk3_m, &b_tau_trk3_m);
   fChain->SetBranchAddress("tau_trk3_x", tau_trk3_x, &b_tau_trk3_x);
   fChain->SetBranchAddress("tau_trk3_y", tau_trk3_y, &b_tau_trk3_y);
   fChain->SetBranchAddress("tau_trk3_z", tau_trk3_z, &b_tau_trk3_z);
   fChain->SetBranchAddress("tau_trk3_xd", tau_trk3_xd, &b_tau_trk3_xd);
   fChain->SetBranchAddress("tau_trk3_yd", tau_trk3_yd, &b_tau_trk3_yd);
   fChain->SetBranchAddress("tau_trk3_zd", tau_trk3_zd, &b_tau_trk3_zd);
   fChain->SetBranchAddress("tau_trk3_charge", tau_trk3_charge, &b_tau_trk3_charge);
   fChain->SetBranchAddress("tau_trk3_pdgId", tau_trk3_pdgId, &b_tau_trk3_pdgId);
   fChain->SetBranchAddress("jet_n", &jet_n, &b_jet_n);
   fChain->SetBranchAddress("jet_E", jet_E, &b_jet_E);
   fChain->SetBranchAddress("jet_m", jet_m, &b_jet_m);
   fChain->SetBranchAddress("jet_pt", jet_pt, &b_jet_pt);
   fChain->SetBranchAddress("jet_eta", jet_eta, &b_jet_eta);
   fChain->SetBranchAddress("jet_phi", jet_phi, &b_jet_phi);
   fChain->SetBranchAddress("jet_isTau", jet_isTau, &b_jet_isTau);
   fChain->SetBranchAddress("jet_isBtagged", jet_isBtagged, &b_jet_isBtagged);
   fChain->SetBranchAddress("MET_ex", &MET_ex, &b_MET_ex);
   fChain->SetBranchAddress("MET_ey", &MET_ey, &b_MET_ey);
   fChain->SetBranchAddress("MET_ez", &MET_ez, &b_MET_ez);
   fChain->SetBranchAddress("MET_et", &MET_et, &b_MET_et);
   fChain->SetBranchAddress("MET_phi", &MET_phi, &b_MET_phi);
   fChain->SetBranchAddress("MET_sumet", &MET_sumet, &b_MET_sumet);
   fChain->SetBranchAddress("MET_Truth_NonInt_ex", &MET_Truth_NonInt_ex, &b_MET_Truth_NonInt_ex);
   fChain->SetBranchAddress("MET_Truth_NonInt_ey", &MET_Truth_NonInt_ey, &b_MET_Truth_NonInt_ey);
   fChain->SetBranchAddress("MET_Truth_NonInt_ez", &MET_Truth_NonInt_ez, &b_MET_Truth_NonInt_ez);
   fChain->SetBranchAddress("MET_Truth_NonInt_et", &MET_Truth_NonInt_et, &b_MET_Truth_NonInt_et);
   fChain->SetBranchAddress("mc_n", &mc_n, &b_mc_n);
   fChain->SetBranchAddress("mc_pt", mc_pt, &b_mc_pt);
   fChain->SetBranchAddress("mc_m", mc_m, &b_mc_m);
   fChain->SetBranchAddress("mc_eta", mc_eta, &b_mc_eta);
   fChain->SetBranchAddress("mc_phi", mc_phi, &b_mc_phi);
   fChain->SetBranchAddress("mc_status", mc_status, &b_mc_status);
   fChain->SetBranchAddress("mc_pdgId", mc_pdgId, &b_mc_pdgId);
   fChain->SetBranchAddress("mc_pdgIdMoth", mc_pdgIdMoth, &b_mc_pdgIdMoth);
   fChain->SetBranchAddress("mc_charge", mc_charge, &b_mc_charge);
   fChain->SetBranchAddress("jet_truth_n", &jet_truth_n, &b_jet_truth_n);
   fChain->SetBranchAddress("jet_truth_pt", jet_truth_pt, &b_jet_truth_pt);
   fChain->SetBranchAddress("jet_truth_eta", jet_truth_eta, &b_jet_truth_eta);
   fChain->SetBranchAddress("jet_truth_phi", jet_truth_phi, &b_jet_truth_phi);
   fChain->SetBranchAddress("jet_truth_m", jet_truth_m, &b_jet_truth_m);
   fChain->SetBranchAddress("truthTau_n", &truthTau_n, &b_truthTau_n);
   fChain->SetBranchAddress("truthTau_vis_pdgId", truthTau_vis_pdgId, &b_truthTau_vis_pdgId);
   fChain->SetBranchAddress("truthTau_vis_pdgIdMoth", truthTau_vis_pdgIdMoth, &b_truthTau_vis_pdgIdMoth);
   fChain->SetBranchAddress("truthTau_vis_pt", truthTau_vis_pt, &b_truthTau_vis_pt);
   fChain->SetBranchAddress("truthTau_vis_m", truthTau_vis_m, &b_truthTau_vis_m);
   fChain->SetBranchAddress("truthTau_vis_eta", truthTau_vis_eta, &b_truthTau_vis_eta);
   fChain->SetBranchAddress("truthTau_vis_phi", truthTau_vis_phi, &b_truthTau_vis_phi);
   fChain->SetBranchAddress("truthTau_vis_charge", truthTau_vis_charge, &b_truthTau_vis_charge);
   fChain->SetBranchAddress("truthTau_vis_numTrack", truthTau_vis_numTrack, &b_truthTau_vis_numTrack);
   fChain->SetBranchAddress("truthTau_vis_numNeut", truthTau_vis_numNeut, &b_truthTau_vis_numNeut);
   fChain->SetBranchAddress("truthTau_vis_numPi0", truthTau_vis_numPi0, &b_truthTau_vis_numPi0);
   fChain->SetBranchAddress("truthTau_vis_numGam", truthTau_vis_numGam, &b_truthTau_vis_numGam);
   fChain->SetBranchAddress("truthTau_nu3_pt", truthTau_nu3_pt, &b_truthTau_nu3_pt);
   fChain->SetBranchAddress("truthTau_nu3_m", truthTau_nu3_m, &b_truthTau_nu3_m);
   fChain->SetBranchAddress("truthTau_nu3_eta", truthTau_nu3_eta, &b_truthTau_nu3_eta);
   fChain->SetBranchAddress("truthTau_nu3_phi", truthTau_nu3_phi, &b_truthTau_nu3_phi);
   fChain->SetBranchAddress("truthTau_inv_pt", truthTau_inv_pt, &b_truthTau_inv_pt);
   fChain->SetBranchAddress("truthTau_inv_m", truthTau_inv_m, &b_truthTau_inv_m);
   fChain->SetBranchAddress("truthTau_inv_eta", truthTau_inv_eta, &b_truthTau_inv_eta);
   fChain->SetBranchAddress("truthTau_inv_phi", truthTau_inv_phi, &b_truthTau_inv_phi);
   fChain->SetBranchAddress("truthTau_trk1_pt", truthTau_trk1_pt, &b_truthTau_trk1_pt);
   fChain->SetBranchAddress("truthTau_trk1_eta", truthTau_trk1_eta, &b_truthTau_trk1_eta);
   fChain->SetBranchAddress("truthTau_trk1_phi", truthTau_trk1_phi, &b_truthTau_trk1_phi);
   fChain->SetBranchAddress("truthTau_trk1_m", truthTau_trk1_m, &b_truthTau_trk1_m);
   fChain->SetBranchAddress("truthTau_trk1_x", truthTau_trk1_x, &b_truthTau_trk1_x);
   fChain->SetBranchAddress("truthTau_trk1_y", truthTau_trk1_y, &b_truthTau_trk1_y);
   fChain->SetBranchAddress("truthTau_trk1_z", truthTau_trk1_z, &b_truthTau_trk1_z);
   fChain->SetBranchAddress("truthTau_trk1_xd", truthTau_trk1_xd, &b_truthTau_trk1_xd);
   fChain->SetBranchAddress("truthTau_trk1_yd", truthTau_trk1_yd, &b_truthTau_trk1_yd);
   fChain->SetBranchAddress("truthTau_trk1_zd", truthTau_trk1_zd, &b_truthTau_trk1_zd);
   fChain->SetBranchAddress("truthTau_trk1_charge", truthTau_trk1_charge, &b_truthTau_trk1_charge);
   fChain->SetBranchAddress("truthTau_trk1_pdgId", truthTau_trk1_pdgId, &b_truthTau_trk1_pdgId);
   fChain->SetBranchAddress("truthTau_trk2_pt", truthTau_trk2_pt, &b_truthTau_trk2_pt);
   fChain->SetBranchAddress("truthTau_trk2_eta", truthTau_trk2_eta, &b_truthTau_trk2_eta);
   fChain->SetBranchAddress("truthTau_trk2_phi", truthTau_trk2_phi, &b_truthTau_trk2_phi);
   fChain->SetBranchAddress("truthTau_trk2_m", truthTau_trk2_m, &b_truthTau_trk2_m);
   fChain->SetBranchAddress("truthTau_trk2_x", truthTau_trk2_x, &b_truthTau_trk2_x);
   fChain->SetBranchAddress("truthTau_trk2_y", truthTau_trk2_y, &b_truthTau_trk2_y);
   fChain->SetBranchAddress("truthTau_trk2_z", truthTau_trk2_z, &b_truthTau_trk2_z);
   fChain->SetBranchAddress("truthTau_trk2_xd", truthTau_trk2_xd, &b_truthTau_trk2_xd);
   fChain->SetBranchAddress("truthTau_trk2_yd", truthTau_trk2_yd, &b_truthTau_trk2_yd);
   fChain->SetBranchAddress("truthTau_trk2_zd", truthTau_trk2_zd, &b_truthTau_trk2_zd);
   fChain->SetBranchAddress("truthTau_trk2_charge", truthTau_trk2_charge, &b_truthTau_trk2_charge);
   fChain->SetBranchAddress("truthTau_trk2_pdgId", truthTau_trk2_pdgId, &b_truthTau_trk2_pdgId);
   fChain->SetBranchAddress("truthTau_trk3_pt", truthTau_trk3_pt, &b_truthTau_trk3_pt);
   fChain->SetBranchAddress("truthTau_trk3_eta", truthTau_trk3_eta, &b_truthTau_trk3_eta);
   fChain->SetBranchAddress("truthTau_trk3_phi", truthTau_trk3_phi, &b_truthTau_trk3_phi);
   fChain->SetBranchAddress("truthTau_trk3_m", truthTau_trk3_m, &b_truthTau_trk3_m);
   fChain->SetBranchAddress("truthTau_trk3_x", truthTau_trk3_x, &b_truthTau_trk3_x);
   fChain->SetBranchAddress("truthTau_trk3_y", truthTau_trk3_y, &b_truthTau_trk3_y);
   fChain->SetBranchAddress("truthTau_trk3_z", truthTau_trk3_z, &b_truthTau_trk3_z);
   fChain->SetBranchAddress("truthTau_trk3_xd", truthTau_trk3_xd, &b_truthTau_trk3_xd);
   fChain->SetBranchAddress("truthTau_trk3_yd", truthTau_trk3_yd, &b_truthTau_trk3_yd);
   fChain->SetBranchAddress("truthTau_trk3_zd", truthTau_trk3_zd, &b_truthTau_trk3_zd);
   fChain->SetBranchAddress("truthTau_trk3_charge", truthTau_trk3_charge, &b_truthTau_trk3_charge);
   fChain->SetBranchAddress("truthTau_trk3_pdgId", truthTau_trk3_pdgId, &b_truthTau_trk3_pdgId);
   fChain->SetBranchAddress("truthTau_neut1_e", truthTau_neut1_e, &b_truthTau_neut1_e);
   fChain->SetBranchAddress("truthTau_neut1_pt", truthTau_neut1_pt, &b_truthTau_neut1_pt);
   fChain->SetBranchAddress("truthTau_neut1_eta", truthTau_neut1_eta, &b_truthTau_neut1_eta);
   fChain->SetBranchAddress("truthTau_neut1_phi", truthTau_neut1_phi, &b_truthTau_neut1_phi);
   fChain->SetBranchAddress("truthTau_neut1_pdgId", truthTau_neut1_pdgId, &b_truthTau_neut1_pdgId);
   fChain->SetBranchAddress("truthTau_neut2_e", truthTau_neut2_e, &b_truthTau_neut2_e);
   fChain->SetBranchAddress("truthTau_neut2_pt", truthTau_neut2_pt, &b_truthTau_neut2_pt);
   fChain->SetBranchAddress("truthTau_neut2_eta", truthTau_neut2_eta, &b_truthTau_neut2_eta);
   fChain->SetBranchAddress("truthTau_neut2_phi", truthTau_neut2_phi, &b_truthTau_neut2_phi);
   fChain->SetBranchAddress("truthTau_neut2_pdgId", truthTau_neut2_pdgId, &b_truthTau_neut2_pdgId);
   fChain->SetBranchAddress("truthTau_neut3_e", truthTau_neut3_e, &b_truthTau_neut3_e);
   fChain->SetBranchAddress("truthTau_neut3_pt", truthTau_neut3_pt, &b_truthTau_neut3_pt);
   fChain->SetBranchAddress("truthTau_neut3_eta", truthTau_neut3_eta, &b_truthTau_neut3_eta);
   fChain->SetBranchAddress("truthTau_neut3_phi", truthTau_neut3_phi, &b_truthTau_neut3_phi);
   fChain->SetBranchAddress("truthTau_neut3_pdgId", truthTau_neut3_pdgId, &b_truthTau_neut3_pdgId);
}
